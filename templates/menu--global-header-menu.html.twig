{#
/**
 * @file
 * Theme override to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 */
#}
{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see http://twig.sensiolabs.org/doc/tags/macro.html
#}
{{ menus.menu_links(items, attributes, 0) }}

{% macro menu_links(items, attributes, menu_level) %}
  {% import _self as menus %}
  {% if items %}
	{% for item in items %}
	  {# Sets the item type to link or button #}
	  {% if item.url.isrouted and item.url.routeName == '<button>' %}
	  	{% set menu_item_type = 'button' %}
      {% else %}
      	{% set menu_item_type = 'link' %}
      {% endif %}
	  {# Loops through the links that are not dropdowns or buttons #}
	  {% if menu_item_type == 'link' and menu_level == 0 %}
	  	{% if item.title == 'NIU.edu' %}
	      <ul{{ attributes.addClass('nav justify-content-start') }}>
		  	{%
          	  set classes = [
            	'nav-item small',
          	  ]
      	  	%}
      	      <li{{ item.attributes.addClass(classes) }}>
          	{%
          	  set link_classes = [
    			'nav-link',
          	  ]
          	%}
		  	  	<a href="{{ item.url }}"><i class="fas fa-long-arrow-alt-left"></i>{{ item.title }}</a>
      	      </li>
		  </ul>
		  <ul{{ attributes.addClass('nav justify-content-end d-none d-md-inline-flex mr-lg-0').removeClass('nav justify-content-start') }}>
	  	{% else %}
	      {%
          	set classes = [
              'nav-item small',
          	]
      	  %}
      	    <li{{ item.attributes.addClass(classes) }}>
          {%
            set link_classes = [
              'nav-link',
            ]
          %}
        	  {{ link(item.title, item.url, {'class': link_classes}) }}
      	    </li>
	  	{% endif %}
	  {# Loops through the buttons and sets the dropdown menu level #}
	  {% elseif menu_item_type == 'button' and menu_level == 0%}
	  	{%
          set classes = [
          	'nav-item small dropdown',
          ]
      	%}
      	  <li{{ item.attributes.addClass(classes) }}>
			<a aria-expanded="false" aria-haspopup="true" class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button">{{ item.title }}</a>
		  	  <div class="dropdown-menu">
			  {% if item.below %}
			  	{{ menus.menu_links(item.below, attributes, menu_level + 1) }}
			  {% endif %}
		  	  </div>
	  {# Closes ul element in final loop #}
	  {% elseif menu_level == 0 and loop.last %}
	    </ul>
	  {# Loops through dropdowns #}
	  {% elseif menu_level == 1 %}
	  	{%
    	  set link_classes = [
          	'dropdown-item',
          ]
      	%}
	  	  {{ link(item.title, item.url, {'class': link_classes}) }}
      	  {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
	  {% endif %}   
	{% endfor %}
  {% endif %}
{% endmacro %}